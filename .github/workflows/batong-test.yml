name: CI/CD_Pipeline

on:
  push:
    branches: ["master"]

jobs:
  Pre-Build:
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }}
    steps:
      - id: branch_check
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            echo "::set-output name=env_name::PRODUCTION"
          elif [ "${{ github.ref }}" = "refs/heads/staging" ]; then
            echo "::set-output name=env_name::STAGING"
          else
            echo "::set-output name=env_name::DEV"
          fi

  Build_and_Deploy:
    needs: [Pre-Build]
    runs-on: ubuntu-latest
    environment: ${{needs.Pre-Build.outputs.env_name}}
    steps:
      
      - name: Dump vars context
        env:
          VARS_CONTEXT: ${{ toJson(vars) }}
        run: |
          echo "$VARS_CONTEXT" > env_variables.json

      - name: Generate environment file
        run: |
          echo ${{ vars.STAGE }}
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' env_variables.json > .env.${{ vars.STAGE }}

      # - name: Install dependencies
      #   run: |
      #     yarn install
      #     cd src/layer/nodejs && yarn install

      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to AWS
        run: yarn deploy:${{ vars.STAGE }}
